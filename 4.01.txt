#1. 리다이렉션
  -표준 스트림이란?
    - 파일을 읽고 쓰는 과정처럼 데이터를 입출력하는 것
    - 데이터가 연속적으로 흐른다는 특징
    - 키보드 -> 운영체제 -> 디스플레이
      - stdin
      - stdout
      - stderr
      - out/err 다른 방식으로 (루트로) 출력된다.

  -리다이렉션(redirection)이란?
    -입출력 방향을 다른 곳으로 바꾼다.
    - 키보드에서 입력 받지 않고 파일에서 받는 것
    - 디스플레이 -> 파일로 쓰는
    예: ls -l > 파일로 저장한다.

  - 셸의 역할이다. (운영체제와 파일을 연결하는 작업)

  1) 출력 리다이렉션
    - 출력 내용을 표준 출력이 아닌 파일로 보내 저장하는 것
    - syntax: 명령 > 파일이름
  ## cat
    -concatenate: 연속으로 이어 붙인다.
    -cat 파일이름1, 2, 3, ....
      -파일 1 + 2 + 3 ....
      -파일 1 2
    - 하나 이상의 파일을 다른 여러 종류의 파일과 연결할 때 많이 사용한다.
    - 파일 복사, 합침, ..
    - 추가 >>
    
  2) 입력 리다이렉션
  - 명령 < 파일
  - wc animals.txt : 프로그램이 파일의 존재를 알고 있음
  - wc < animals.txt : 리다이렉션 때문에 프로그램이 파일 존재 모름 (파일 이름이 뜨지 않음)

  3) 리다이렉션이 불가능한 출력
  - 표준오류는 리다이렉션이 불가능하다.
  - 단 '2>'를 사용하면 리다이렉션이 가능하다.
  - 2>> : 이어쓰기
  - 표준 출력과 오류 같이 리다이렉션하려면? '&>'
    예: 존재하는 파일과 존재하지 않는 파일 모두 읽어서 새로운 파일 만들자.
      line1.txt non.txt -> line2.txt
      - 모두 리다이렉션하라.
      cat line1.txt non.txt 2> line2.txt #stdout err(x)
      cat line1.txt non.txt 2>> line2.txt # 이어쓰기
      cat line1.txt non.txt &> line2.txt

  4) 입출력 모두 다 같이
    - 명령 < 입력파일 > 출력파일
    Q. animals.txt 에서 Perl 라인의 글자(character) 수 세고 결과를 파일로 (result). 입력도 리다이렉션 (한번에)
    grep Perl < animals.txt | wc -c > result

# 2. Escape Letters